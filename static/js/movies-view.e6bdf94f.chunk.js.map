{"version":3,"sources":["services/movies-api.js","components/MoviePreview/MoviePreview.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","views/MoviesView.js"],"names":["API","BASE_URL","fetchMovies","a","axios","get","response","data","results","fetchById","id","fetchCast","cast","fetchReviews","searchMovies","query","MoviePreview","title","name","poster_path","className","src","alt","withRouter","movies","location","map","original_title","original_name","to","pathname","state","from","SearchForm","handleChange","event","setState","currentTarget","value","trim","handleSubmit","preventDefault","props","onSubmit","action","this","type","onChange","Component","SearchView","SearchQuery","onChangeQuery","history","push","search","searchQuery","api","console","log","window","url","URLSearchParams","prevProps","prevState","MoviesList"],"mappings":"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","file":"static/js/movies-view.e6bdf94f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = '3d84961f949a3e74c161a443f40cca6f';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchMovies = async () => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/trending/all/day?api_key=${API}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nconst fetchById = async id => {\r\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API}`);\r\n  return response.data;\r\n};\r\n\r\nconst fetchCast = async id => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API}`,\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nconst fetchReviews = async id => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nconst searchMovies = async query => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API}&query=${query}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport default {\r\n  fetchMovies,\r\n  fetchById,\r\n  fetchCast,\r\n  fetchReviews,\r\n  searchMovies,\r\n};","const IMG_URL = 'https://image.tmdb.org/t/p/w200'\r\n\r\nconst MoviePreview = ({title, name, poster_path}) => {\r\n\treturn (\r\n\t\t<div className=\"moviePreview\">\r\n\t\t\t<img src={IMG_URL+poster_path} alt={title || name} />\r\n\t\t\t<div className=\"moviePreview-body\">\r\n\t\t\t\t<h4 className=\"moviePreview-title\">{ title || name}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t );\r\n}\r\n \r\nexport default MoviePreview;","import { NavLink, withRouter } from 'react-router-dom';\r\nimport MoviePreview from '../MoviePreview';\r\n\r\nconst MoviesList = ({movies, location}) => {\r\n    return (\r\n        <>\r\n            <ul className=\"movieList\">{movies.map(\r\n                ({id, original_title, original_name, poster_path}) => <li className=\"movies-list\" key={id}>\r\n                    <NavLink to={{\r\n                        pathname: `/movies/${id}`,\r\n                        state: { from: location, }\r\n                    }}>\r\n                        <MoviePreview title={original_title} name={original_name} poster_path={poster_path}/>\r\n                    </NavLink>\r\n                </li>\r\n              )}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default withRouter(MoviesList);","import React, { Component } from 'react';\r\n\r\nclass SearchForm extends Component {\r\n\tstate = {\r\n\t\tquery: '',\r\n\t};\r\n\t\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value.trim() });\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSubmit(this.state.query);\r\n\t}\r\n\t\r\n\trender() { \r\n\t\treturn (\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n \r\nexport default SearchForm;","/* import React from 'react';\r\n\r\nconst MoviesView = () => {\r\n    return (<>MoviesPage</>);\r\n};\r\n \r\nexport default MoviesView; */\r\nimport React, { Component } from 'react';\r\nimport MoviesList from '../components/MoviesList';\r\nimport SearchForm from '../components/SearchForm';\r\nimport api from '../services/movies-api';\r\n\r\nclass SearchView extends Component {\r\n  state = {\r\n    SearchQuery: '',\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    if (location?.state?.searchQuery) {\r\n      this.setState({ SearchQuery: location?.state?.searchQuery });\r\n    }\r\n    if (window.location.search) {\r\n      const url = new URLSearchParams(window.location.search);\r\n      this.setState({ SearchQuery: url.get('query') });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.SearchQuery !== this.state.SearchQuery) {\r\n      this.fetchMovies();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({ SearchQuery: query });\r\n\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: `query=${query}`,\r\n      state: { searchQuery: query },\r\n    });\r\n  };\r\n\r\n  fetchMovies = async () => {\r\n    try {\r\n      const movies = await api.searchMovies(this.state.SearchQuery);\r\n      this.setState({ movies });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchForm onSubmit={this.onChangeQuery} />\r\n\r\n        <MoviesList movies={this.state.movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchView;"],"sourceRoot":""}